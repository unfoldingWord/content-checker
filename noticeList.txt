Last updated 2021-01-19 14:43:54.095136 by makeNoticeList.py
Got 528 notices:
  parameterAssert(noticeObject.priority !== undefined, "cBP : 'priority' parameter should be defined"	from checkBookPackage.js line 75
  parameterAssert(typeof noticeObject.priority === 'number', `cBP : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from checkBookPackage.js line 76
  parameterAssert(noticeObject.message !== undefined, "cBP : 'message' parameter should be defined"	from checkBookPackage.js line 77
  parameterAssert(typeof noticeObject.message === 'string', `cBP : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from checkBookPackage.js line 78
  parameterAssert(typeof noticeObject.bookID === 'string', `cBP : 'bookID' parameter should be a string not a '$typeof noticeObject.bookID': $noticeObject.bookID`	from checkBookPackage.js line 81
  parameterAssert(noticeObject.bookID.length === 3, `cBP : 'bookID' parameter should be three characters long not $noticeObject.bookID.length`	from checkBookPackage.js line 82
  parameterAssert(bookID === 'OBS' || books.isValidBookID(noticeObject.bookID), `cBP : '$noticeObject.bookID' is not a valid USFM book identifier`	from checkBookPackage.js line 83
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `cBP : 'C' parameter should be a string not a '$typeof noticeObject.C': $noticeObject.C`	from checkBookPackage.js line 86
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `cBP : 'V' parameter should be a string not a '$typeof noticeObject.V': $noticeObject.V`	from checkBookPackage.js line 88
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cBP : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from checkBookPackage.js line 90
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cBP : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from checkBookPackage.js line 92
  parameterAssert(noticeObject.location !== undefined, "cBP : 'location' parameter should be defined"	from checkBookPackage.js line 93
  parameterAssert(typeof noticeObject.location === 'string', `cBP : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from checkBookPackage.js line 94
  parameterAssert(noticeObject.extra !== undefined, "cBP : 'extra' parameter should be defined"	from checkBookPackage.js line 95
  parameterAssert(typeof noticeObject.extra === 'string', `cBP : 'extra' parameter should be a string not a '$typeof noticeObject.extra': $noticeObject.extra`	from checkBookPackage.js line 96
  parameterAssert(noticeObject.priority !== undefined, "cTQ : 'priority' parameter should be defined"	from checkBookPackage.js line 475
  parameterAssert(typeof noticeObject.priority === 'number', `cTQ : 'priority' parameter should be a number not a '$typeof noticeObject.priority'`	from checkBookPackage.js line 476
  parameterAssert(noticeObject.message !== undefined, "cTQ : 'message' parameter should be defined"	from checkBookPackage.js line 477
  parameterAssert(typeof noticeObject.message === 'string', `cTQ : 'message' parameter should be a string not a '$typeof noticeObject.message'`	from checkBookPackage.js line 478
  parameterAssert(noticeObject.bookID !== undefined, "cTQ : 'bookID' parameter should be defined"	from checkBookPackage.js line 479
  parameterAssert(typeof noticeObject.bookID === 'string', `cTQ : 'bookID' parameter should be a string not a '$typeof noticeObject.bookID'`	from checkBookPackage.js line 480
  parameterAssert(noticeObject.bookID.length === 3, `cTQ : 'bookID' parameter should be three characters long not $noticeObject.bookID.length`	from checkBookPackage.js line 481
  parameterAssert(books.isValidBookID(noticeObject.bookID), `cTQ : '$noticeObject.bookID' is not a valid USFM book identifier`	from checkBookPackage.js line 482
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `cTQ : 'C' parameter should be a string not a '$typeof noticeObject.C'`	from checkBookPackage.js line 484
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `cTQ : 'V' parameter should be a string not a '$typeof noticeObject.V'`	from checkBookPackage.js line 486
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cTQ : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex'`	from checkBookPackage.js line 488
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cTQ : 'extract' parameter should be a string not a '$typeof noticeObject.extract'`	from checkBookPackage.js line 490
  parameterAssert(noticeObject.location !== undefined, "cTQ : 'location' parameter should be defined"	from checkBookPackage.js line 491
  parameterAssert(typeof noticeObject.location === 'string', `cTQ : 'location' parameter should be a string not a '$typeof noticeObject.location'`	from checkBookPackage.js line 492
  parameterAssert(noticeObject.extra !== undefined, "cTQ : 'extra' parameter should be defined"	from checkBookPackage.js line 493
  parameterAssert(typeof noticeObject.extra === 'string', `cTQ : 'extra' parameter should be a string not a '$typeof noticeObject.extra'`	from checkBookPackage.js line 494
  userLog(`cBPs : (priority=$noticeObject.priority) $noticeObject.extra $noticeObject.message$noticeObject.characterIndex > 0 ? ` (at character $noticeObject.characterIndex)` : ""$noticeObject.extract ? ` $noticeObject.extract` : ""$noticeObject.location`	from checkBookPackages.js line 24
  parameterAssert(noticeObject.priority !== undefined, "cBPs : 'priority' parameter should be defined"	from checkBookPackages.js line 25
  parameterAssert(typeof noticeObject.priority === 'number', `cBPs : 'priority' parameter should be a number not a '$typeof noticeObject.priority'`	from checkBookPackages.js line 26
  parameterAssert(noticeObject.message !== undefined, "cBPs : 'message' parameter should be defined"	from checkBookPackages.js line 27
  parameterAssert(typeof noticeObject.message === 'string', `cBPs : 'message' parameter should be a string not a '$typeof noticeObject.message'`	from checkBookPackages.js line 28
  parameterAssert(typeof noticeObject.bookID === 'string', `cBPs : 'bookID' parameter should be a string not a '$typeof noticeObject.bookID'`	from checkBookPackages.js line 31
  parameterAssert(noticeObject.bookID.length === 3, `cBPs : 'bookID' parameter should be three characters long not $noticeObject.bookID.length`	from checkBookPackages.js line 32
  parameterAssert(books.isValidBookID(noticeObject.bookID), `cBPs : '$noticeObject.bookID' is not a valid USFM book identifier`	from checkBookPackages.js line 33
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `cBPs : 'C' parameter should be a string not a '$typeof noticeObject.C'`	from checkBookPackages.js line 36
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `cBPs : 'V' parameter should be a string not a '$typeof noticeObject.V'`	from checkBookPackages.js line 38
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cBPs : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex'`	from checkBookPackages.js line 40
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cBPs : 'extract' parameter should be a string not a '$typeof noticeObject.extract'`	from checkBookPackages.js line 42
  parameterAssert(noticeObject.location !== undefined, "cBPs : 'location' parameter should be defined"	from checkBookPackages.js line 43
  parameterAssert(typeof noticeObject.location === 'string', `cBPs : 'location' parameter should be a string not a '$typeof noticeObject.location'`	from checkBookPackages.js line 44
  parameterAssert(noticeObject.extra !== undefined, "cBPs : 'extra' parameter should be defined"	from checkBookPackages.js line 45
  parameterAssert(typeof noticeObject.extra === 'string', `cBPs : 'extra' parameter should be a string not a '$typeof extra'`	from checkBookPackages.js line 46
  parameterAssert(noticeObject.priority !== undefined, "cR : 'priority' parameter should be defined"	from checkRepo.js line 62
  parameterAssert(typeof noticeObject.priority === 'number', `cR : 'priority' parameter should be a number not a '$typeof noticeObject.priority'`	from checkRepo.js line 63
  parameterAssert(noticeObject.message !== undefined, "cR : 'message' parameter should be defined"	from checkRepo.js line 64
  parameterAssert(typeof noticeObject.message === 'string', `cR : 'message' parameter should be a string not a '$typeof noticeObject.message'`	from checkRepo.js line 65
  parameterAssert(typeof noticeObject.bookID === 'string', `cR : 'bookID' parameter should be a string not a '$typeof noticeObject.bookID'`	from checkRepo.js line 68
  parameterAssert(noticeObject.bookID.length === 3, `cR : 'bookID' parameter should be three characters long not $noticeObject.bookID.length`	from checkRepo.js line 69
  parameterAssert(noticeObject.bookID === 'OBS' || books.isOptionalValidBookID(noticeObject.bookID), `cR : '$noticeObject.bookID' is not a valid USFM book identifier`	from checkRepo.js line 70
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `cR : 'C' parameter should be a string not a '$typeof noticeObject.C'`	from checkRepo.js line 73
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `cR : 'V' parameter should be a string not a '$typeof noticeObject.V'`	from checkRepo.js line 75
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cR : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex'`	from checkRepo.js line 77
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cR : 'extract' parameter should be a string not a '$typeof noticeObject.extract'`	from checkRepo.js line 79
  parameterAssert(noticeObject.location !== undefined, "cR : 'location' parameter should be defined"	from checkRepo.js line 80
  parameterAssert(typeof noticeObject.location === 'string', `cR : 'location' parameter should be a string not a '$typeof noticeObject.location'`	from checkRepo.js line 81
  parameterAssert(typeof noticeObject.extra === 'string', `cR : 'extra' parameter should be a string not a '$typeof noticeObject.extra'`	from checkRepo.js line 83
  checkRepoResult.noticeList.push( 997, "Repository doesn’t exist", details, username, repoCode, repoName, location: givenLocation, extra: repoCode	from checkRepo.js line 259
  parameterAssert(noticeObject.priority !== undefined, "checkTN_TSVDataRow : 'priority' parameter should be defined"	from tn-table-row-check.js line 81
  parameterAssert(typeof noticeObject.priority === 'number', `checkTN_TSVDataRow : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from tn-table-row-check.js line 82
  parameterAssert(noticeObject.message !== undefined, "checkTN_TSVDataRow : 'message' parameter should be defined"	from tn-table-row-check.js line 83
  parameterAssert(typeof noticeObject.message === 'string', `checkTN_TSVDataRow : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from tn-table-row-check.js line 84
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `checkTN_TSVDataRow : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from tn-table-row-check.js line 88
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `checkTN_TSVDataRow : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from tn-table-row-check.js line 90
  parameterAssert(noticeObject.location !== undefined, "checkTN_TSVDataRow : 'location' parameter should be defined"	from tn-table-row-check.js line 91
  parameterAssert(typeof noticeObject.location === 'string', `checkTN_TSVDataRow : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from tn-table-row-check.js line 92
  parameterAssert(noticeObject.priority !== undefined, "cTNlnk : 'priority' parameter should be defined"	from tn-links-check.js line 127
  parameterAssert(typeof noticeObject.priority === 'number', `cTNlnk : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from tn-links-check.js line 128
  parameterAssert(noticeObject.message !== undefined, "cTNlnk : 'message' parameter should be defined"	from tn-links-check.js line 129
  parameterAssert(typeof noticeObject.message === 'string', `cTNlnk : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from tn-links-check.js line 130
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cTNlnk : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from tn-links-check.js line 132
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cTNlnk : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from tn-links-check.js line 134
  parameterAssert(noticeObject.location !== undefined, "cTNlnk : 'location' parameter should be defined"	from tn-links-check.js line 135
  parameterAssert(typeof noticeObject.location === 'string', `cTNlnk : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from tn-links-check.js line 136
  parameterAssert(noticeObject.priority !== undefined, "dBTCs : 'priority' parameter should be defined"	from file-text-check.js line 41
  parameterAssert(typeof noticeObject.priority === 'number', `dBTCs : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from file-text-check.js line 42
  parameterAssert(noticeObject.message !== undefined, "dBTCs : 'message' parameter should be defined"	from file-text-check.js line 43
  parameterAssert(typeof noticeObject.message === 'string', `dBTCs : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from file-text-check.js line 44
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `dBTCs : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from file-text-check.js line 46
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `dBTCs : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from file-text-check.js line 48
  parameterAssert(noticeObject.location !== undefined, "dBTCs : 'location' parameter should be defined"	from file-text-check.js line 49
  parameterAssert(typeof noticeObject.location === 'string', `dBTCs : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from file-text-check.js line 50
  parameterAssert(noticeObject.priority !== undefined, "cUSFM : 'priority' parameter should be defined"	from usfm-text-check.js line 180
  parameterAssert(typeof noticeObject.priority === 'number', `cUSFM : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from usfm-text-check.js line 181
  parameterAssert(noticeObject.message !== undefined, "cUSFM : 'message' parameter should be defined"	from usfm-text-check.js line 182
  parameterAssert(typeof noticeObject.message === 'string', `cUSFM : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from usfm-text-check.js line 183
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `cUSFM : 'C' parameter should be a string not a '$typeof noticeObject.C': $noticeObject.C`	from usfm-text-check.js line 185
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `cUSFM : 'V' parameter should be a string not a '$typeof noticeObject.V': $noticeObject.V`	from usfm-text-check.js line 187
  if (noticeObject.characterIndex !== undefined) parameterAssert(typeof noticeObject.characterIndex === 'number', `cUSFM : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from usfm-text-check.js line 189
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cUSFM : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from usfm-text-check.js line 191
  parameterAssert(noticeObject.location !== undefined, "cUSFM : 'location' parameter should be defined"	from usfm-text-check.js line 192
  parameterAssert(typeof noticeObject.location === 'string', `cUSFM : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from usfm-text-check.js line 193
  parameterAssert(noticeObject.message.indexOf("Mismatched ") < 0 || noticeObject.lineNumber === undefined, `checkUSFMText : got bad notice: $JSON.stringify(noticeObject)`	from usfm-text-check.js line 196
  languageCode === 'en' || languageCode === 'fr' ? 490 : 190, "Expected header field to contain a mixed-case string", fieldName: `\\$marker`, extract: rest, C, V, location: lineLocation	from usfm-text-check.js line 757
  marker === 's5' ? 111 : 809, `$marker === 's5' ? 'Deprecated' : 'Unexpected' '\\$marker' marker at start of line`, C, V, lineNumber, characterIndex: 1, location: lineLocation	from usfm-text-check.js line 780
  `"`.indexOf(line[0]) < 0 ? 880 : 280, C, V, "Expected line to start with backslash", lineNumber: n, characterIndex: 0, extract: line[0], location: ourLocation	from usfm-text-check.js line 859
  C === '1' ? 657 : 457, C, V, "Paragraph marker expected before first verse", lineNumber: n, characterIndex: 1, details: `'\\$marker' after '\\$lastMarker'`, location: ourLocation	from usfm-text-check.js line 951
  parameterAssert(noticeObject.priority !== undefined, "cManT : 'priority' parameter should be defined"	from manifest-text-check.js line 591
  parameterAssert(typeof noticeObject.priority === 'number', `cManT : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from manifest-text-check.js line 592
  parameterAssert(noticeObject.message !== undefined, "cManT : 'message' parameter should be defined"	from manifest-text-check.js line 593
  parameterAssert(typeof noticeObject.message === 'string', `cManT : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from manifest-text-check.js line 594
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cManT : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from manifest-text-check.js line 596
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cManT : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from manifest-text-check.js line 598
  parameterAssert(noticeObject.location !== undefined, "cManT : 'location' parameter should be defined"	from manifest-text-check.js line 599
  parameterAssert(typeof noticeObject.location === 'string', `cManT : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from manifest-text-check.js line 600
  parameterAssert(noticeObject.priority !== undefined, "checkAnnotationTSVDataRow : 'priority' parameter should be defined"	from annotation-row-check.js line 89
  parameterAssert(typeof noticeObject.priority === 'number', `checkAnnotationTSVDataRow : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from annotation-row-check.js line 90
  parameterAssert(noticeObject.message !== undefined, "checkAnnotationTSVDataRow : 'message' parameter should be defined"	from annotation-row-check.js line 91
  parameterAssert(typeof noticeObject.message === 'string', `checkAnnotationTSVDataRow : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from annotation-row-check.js line 92
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `checkAnnotationTSVDataRow : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from annotation-row-check.js line 96
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `checkAnnotationTSVDataRow : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from annotation-row-check.js line 98
  parameterAssert(noticeObject.location !== undefined, "checkAnnotationTSVDataRow : 'location' parameter should be defined"	from annotation-row-check.js line 99
  parameterAssert(typeof noticeObject.location === 'string', `checkAnnotationTSVDataRow : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from annotation-row-check.js line 100
  parameterAssert(noticeObject.priority !== undefined, "dBTCs : 'priority' parameter should be defined"	from field-text-check.js line 52
  parameterAssert(typeof noticeObject.priority === 'number', `dBTCs : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from field-text-check.js line 53
  parameterAssert(noticeObject.message !== undefined, "dBTCs : 'message' parameter should be defined"	from field-text-check.js line 54
  parameterAssert(typeof noticeObject.message === 'string', `dBTCs : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from field-text-check.js line 55
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `dBTCs : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from field-text-check.js line 57
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `dBTCs : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from field-text-check.js line 59
  parameterAssert(noticeObject.location !== undefined, "dBTCs : 'location' parameter should be defined"	from field-text-check.js line 60
  parameterAssert(typeof noticeObject.location === 'string', `dBTCs : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from field-text-check.js line 61
  const notice =  95, "Unexpected trailing space(s)", extract, location: ourLocation ;	from field-text-check.js line 185
  notice	from field-text-check.js line 188
  notice =  124, "Unexpected double spaces", extract, location: ourLocation ;	from field-text-check.js line 219
  notice =  224, "Multiple unexpected double spaces", details: `$doubleCount occurrences—only first is displayed`, extract, location: ourLocation ;	from field-text-check.js line 221
  notice	from field-text-check.js line 225
  const notice =  580, "Unexpected narrow non-break space character", extract, location: ourLocation ;	from field-text-check.js line 249
  notice	from field-text-check.js line 252
  const notice =  177, `Unexpected doubled $punctChar characters`, extract, location: ourLocation ;	from field-text-check.js line 284
  notice	from field-text-check.js line 287
  const notice =  191, `Unexpected $punctChar character after space`, extract, location: ourLocation ;	from field-text-check.js line 303
  notice	from field-text-check.js line 306
  const notice =  192, `Unexpected space after $punctChar character`, extract, location: ourLocation ;	from field-text-check.js line 332
  notice	from field-text-check.js line 335
  const notice =  193, `Unexpected $punctChar character at end of line`, extract, location: ourLocation ;	from field-text-check.js line 350
  notice	from field-text-check.js line 353
  thisPriority, `Mismatched $leftChar$rightChar characters`, details: `left=$leftCount.toLocaleString(), right=$rightCount.toLocaleString()`, location: ourLocation	from field-text-check.js line 394
  thisPriority, thisMessage, extract: regexResultArray[0], location: ourLocation	from field-text-check.js line 408
  parameterAssert(noticeObject.priority !== undefined, "cUSFMgr : 'priority' parameter should be defined"	from BCS-usfm-grammar-check.js line 156
  parameterAssert(typeof noticeObject.priority === 'number', `cUSFMgr : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from BCS-usfm-grammar-check.js line 157
  parameterAssert(noticeObject.message !== undefined, "cUSFMgr : 'message' parameter should be defined"	from BCS-usfm-grammar-check.js line 158
  parameterAssert(typeof noticeObject.message === 'string', `cUSFMgr : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from BCS-usfm-grammar-check.js line 159
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cUSFMgr : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from BCS-usfm-grammar-check.js line 161
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cUSFMgr : 'extract' parameter should be a string not a '$typeof extract': $noticeObject.extract`	from BCS-usfm-grammar-check.js line 163
  parameterAssert(noticeObject.location !== undefined, "cUSFMgr : 'location' parameter should be defined"	from BCS-usfm-grammar-check.js line 164
  parameterAssert(typeof noticeObject.location === 'string', `cUSFMgr : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from BCS-usfm-grammar-check.js line 165
  parameterAssert(noticeObject.priority !== undefined, "cOLQ : 'priority' parameter should be defined"	from orig-quote-check.js line 63
  parameterAssert(typeof noticeObject.priority === 'number', `cOLQ : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from orig-quote-check.js line 64
  parameterAssert(noticeObject.message !== undefined, "cOLQ : 'message' parameter should be defined"	from orig-quote-check.js line 65
  parameterAssert(typeof noticeObject.message === 'string', `cOLQ : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from orig-quote-check.js line 66
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cOLQ : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from orig-quote-check.js line 68
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cOLQ : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract for $noticeObject.priority`	from orig-quote-check.js line 70
  parameterAssert(noticeObject.location !== undefined, "cOLQ : 'location' parameter should be defined"	from orig-quote-check.js line 71
  parameterAssert(typeof noticeObject.location === 'string', `cOLQ : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from orig-quote-check.js line 72
  parameterAssert(noticeObject.priority !== undefined, "cYt : 'priority' parameter should be defined"	from yaml-text-check.js line 59
  parameterAssert(typeof noticeObject.priority === 'number', `cManT : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from yaml-text-check.js line 60
  parameterAssert(noticeObject.message !== undefined, "cYt : 'message' parameter should be defined"	from yaml-text-check.js line 61
  parameterAssert(typeof noticeObject.message === 'string', `cManT : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from yaml-text-check.js line 62
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cManT : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from yaml-text-check.js line 64
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cManT : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from yaml-text-check.js line 66
  parameterAssert(noticeObject.location !== undefined, "cYt : 'location' parameter should be defined"	from yaml-text-check.js line 67
  parameterAssert(typeof noticeObject.location === 'string', `cYt : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from yaml-text-check.js line 68
  parameterAssert(noticeObject.priority !== undefined, "TSV : 'priority' parameter should be defined"	from tn-table-text-check.js line 63
  parameterAssert(typeof noticeObject.priority === 'number', `TSV : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from tn-table-text-check.js line 64
  parameterAssert(noticeObject.message !== undefined, "TSV : 'message' parameter should be defined"	from tn-table-text-check.js line 65
  parameterAssert(typeof noticeObject.message === 'string', `TSV : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from tn-table-text-check.js line 66
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `TSV : 'C' parameter should be a string not a '$typeof noticeObject.C': $noticeObject.C`	from tn-table-text-check.js line 68
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `TSV : 'V' parameter should be a string not a '$typeof noticeObject.V': $noticeObject.V`	from tn-table-text-check.js line 70
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `TSV : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from tn-table-text-check.js line 72
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `TSV : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from tn-table-text-check.js line 74
  parameterAssert(noticeObject.location !== undefined, "TSV : 'location' parameter should be defined"	from tn-table-text-check.js line 75
  parameterAssert(typeof noticeObject.location === 'string', `TSV : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from tn-table-text-check.js line 76
  if (noticeObject.repoCode) debugLog(`checkTN_TSVText. already had repoCode=$noticeObject.repoCode (will be lost)`	from tn-table-text-check.js line 80
  parameterAssert(noticeObject.priority !== undefined, "cMdT : 'priority' parameter should be defined"	from markdown-text-check.js line 69
  parameterAssert(typeof noticeObject.priority === 'number', `cMdT : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from markdown-text-check.js line 70
  parameterAssert(noticeObject.message !== undefined, "cMdT : 'message' parameter should be defined"	from markdown-text-check.js line 71
  parameterAssert(typeof noticeObject.message === 'string', `cMdT : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from markdown-text-check.js line 72
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cMdT : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from markdown-text-check.js line 74
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cMdT : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from markdown-text-check.js line 76
  parameterAssert(noticeObject.location !== undefined, "cMdT : 'location' parameter should be defined"	from markdown-text-check.js line 77
  parameterAssert(typeof noticeObject.location === 'string', `cMdT : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from markdown-text-check.js line 78
  parameterAssert(priority !== undefined, "cUSFMjs : 'priority' parameter should be defined"	from usfm-js-check.js line 67
  parameterAssert(typeof priority === 'number', `cUSFMjs : 'priority' parameter should be a number not a '$typeof priority': $priority`	from usfm-js-check.js line 68
  parameterAssert(message !== undefined, "cUSFMjs : 'message' parameter should be defined"	from usfm-js-check.js line 69
  parameterAssert(typeof message === 'string', `cUSFMjs : 'message' parameter should be a string not a '$typeof message': $message`	from usfm-js-check.js line 70
  if (characterIndex) parameterAssert(typeof characterIndex === 'number', `cUSFMjs : 'characterIndex' parameter should be a number not a '$typeof characterIndex': $characterIndex`	from usfm-js-check.js line 72
  if (extract) parameterAssert(typeof extract === 'string', `cUSFMjs : 'extract' parameter should be a string not a '$typeof extract': $extract`	from usfm-js-check.js line 74
  parameterAssert(location !== undefined, "cUSFMjs : 'location' parameter should be defined"	from usfm-js-check.js line 75
  parameterAssert(typeof location === 'string', `cUSFMjs : 'location' parameter should be a string not a '$typeof location': $location`	from usfm-js-check.js line 76
  parameterAssert(noticeObject.priority !== undefined, "cMdT : 'priority' parameter should be defined"	from markdown-file-contents-check.js line 63
  parameterAssert(typeof noticeObject.priority === 'number', `cMdT : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from markdown-file-contents-check.js line 64
  parameterAssert(noticeObject.message !== undefined, "cMdT : 'message' parameter should be defined"	from markdown-file-contents-check.js line 65
  parameterAssert(typeof noticeObject.message === 'string', `cMdT : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from markdown-file-contents-check.js line 66
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cMdT : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from markdown-file-contents-check.js line 68
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cMdT : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from markdown-file-contents-check.js line 70
  parameterAssert(noticeObject.location !== undefined, "cMdT : 'location' parameter should be defined"	from markdown-file-contents-check.js line 71
  parameterAssert(typeof noticeObject.location === 'string', `cMdT : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from markdown-file-contents-check.js line 72
  parameterAssert(noticeObject.priority !== undefined, "cPT : 'priority' parameter should be defined"	from plain-text-check.js line 60
  parameterAssert(typeof noticeObject.priority === 'number', `cPT : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from plain-text-check.js line 61
  parameterAssert(noticeObject.message !== undefined, "cPT : 'message' parameter should be defined"	from plain-text-check.js line 62
  parameterAssert(typeof noticeObject.message === 'string', `cPT : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from plain-text-check.js line 63
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cPT : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from plain-text-check.js line 64
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cPT : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from plain-text-check.js line 66
  parameterAssert(noticeObject.location !== undefined, "cPT : 'location' parameter should be defined"	from plain-text-check.js line 67
  parameterAssert(typeof noticeObject.location === 'string', `cPT : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from plain-text-check.js line 68
  leftChar === '“' ? 162 : 462, `Mismatched $leftChar$rightChar characters`, details: `left=$leftCount.toLocaleString(), right=$rightCount.toLocaleString()`, location: ourLocation	from plain-text-check.js line 235
  parameterAssert(noticeObject.priority !== undefined, "ATSV : 'priority' parameter should be defined"	from annotation-table-check.js line 45
  parameterAssert(typeof noticeObject.priority === 'number', `TSV : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from annotation-table-check.js line 46
  parameterAssert(noticeObject.message !== undefined, "ATSV : 'message' parameter should be defined"	from annotation-table-check.js line 47
  parameterAssert(typeof noticeObject.message === 'string', `TSV : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from annotation-table-check.js line 48
  if (noticeObject.C) parameterAssert(typeof noticeObject.C === 'string', `TSV : 'C' parameter should be a string not a '$typeof noticeObject.C': $noticeObject.C`	from annotation-table-check.js line 50
  if (noticeObject.V) parameterAssert(typeof noticeObject.V === 'string', `TSV : 'V' parameter should be a string not a '$typeof noticeObject.V': $noticeObject.V`	from annotation-table-check.js line 52
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `TSV : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from annotation-table-check.js line 54
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `TSV : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from annotation-table-check.js line 56
  parameterAssert(noticeObject.location !== undefined, "ATSV : 'location' parameter should be defined"	from annotation-table-check.js line 57
  parameterAssert(typeof noticeObject.location === 'string', `TSV : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from annotation-table-check.js line 58
  parameterAssert(priority !== undefined, "sLLC : 'priority' parameter should be defined"	from field-link-check.js line 20
  parameterAssert(typeof priority === 'number', `sLLC : 'priority' parameter should be a number not a '$typeof priority': $priority`	from field-link-check.js line 21
  parameterAssert(message !== undefined, "sLLC : 'message' parameter should be defined"	from field-link-check.js line 22
  parameterAssert(typeof message === 'string', `sLLC : 'message' parameter should be a string not a '$typeof message':$message`	from field-link-check.js line 23
  if (characterIndex) parameterAssert(typeof characterIndex === 'number', `sLLC : 'characterIndex' parameter should be a number not a '$typeof characterIndex': $characterIndex`	from field-link-check.js line 25
  if (extract) parameterAssert(typeof extract === 'string', `sLLC : 'extract' parameter should be a string not a '$typeof extract': $extract`	from field-link-check.js line 27
  userLog(`cFLs : (priority=$priority) $message$characterIndex > 0 ? ` (at character $characterIndex)` : ""$extract ? ` $extract` : ""$location`	from field-link-check.js line 81
  parameterAssert(priority !== undefined, "cFLs : 'priority' parameter should be defined"	from field-link-check.js line 82
  parameterAssert(typeof priority === 'number', `cFLs : 'priority' parameter should be a number not a '$typeof priority': $priority`	from field-link-check.js line 83
  parameterAssert(message !== undefined, "cFLs : 'message' parameter should be defined"	from field-link-check.js line 84
  parameterAssert(typeof message === 'string', `cFLs : 'message' parameter should be a string not a '$typeof message': $message`	from field-link-check.js line 85
  if (characterIndex) parameterAssert(typeof characterIndex === 'number', `cFLs : 'characterIndex' parameter should be a number not a '$typeof characterIndex': $characterIndex`	from field-link-check.js line 87
  if (extract) parameterAssert(typeof extract === 'string', `cFLs : 'extract' parameter should be a string not a '$typeof extract': $extract`	from field-link-check.js line 89
  parameterAssert(location !== undefined, "cFLs : 'location' parameter should be defined"	from field-link-check.js line 90
  parameterAssert(typeof location === 'string', `cFLs : 'location' parameter should be a string not a '$typeof location': $location`	from field-link-check.js line 91
  parameterAssert(noticeObject.priority !== undefined, "cTAref : 'priority' parameter should be defined"	from ta-reference-check.js line 40
  parameterAssert(typeof noticeObject.priority === 'number', `cTAref : 'priority' parameter should be a number not a '$typeof noticeObject.priority': $noticeObject.priority`	from ta-reference-check.js line 41
  parameterAssert(noticeObject.message !== undefined, "cTAref : 'message' parameter should be defined"	from ta-reference-check.js line 42
  parameterAssert(typeof noticeObject.message === 'string', `cTAref : 'message' parameter should be a string not a '$typeof noticeObject.message': $noticeObject.message`	from ta-reference-check.js line 43
  if (noticeObject.characterIndex) parameterAssert(typeof noticeObject.characterIndex === 'number', `cTAref : 'characterIndex' parameter should be a number not a '$typeof noticeObject.characterIndex': $noticeObject.characterIndex`	from ta-reference-check.js line 45
  if (noticeObject.extract) parameterAssert(typeof noticeObject.extract === 'string', `cTAref : 'extract' parameter should be a string not a '$typeof noticeObject.extract': $noticeObject.extract`	from ta-reference-check.js line 47
  parameterAssert(noticeObject.location !== undefined, "cTAref : 'location' parameter should be defined"	from ta-reference-check.js line 48
  parameterAssert(typeof noticeObject.location === 'string', `cTAref : 'location' parameter should be a string not a '$typeof noticeObject.location': $noticeObject.location`	from ta-reference-check.js line 49
  999, "checkRepo function FAILED", repoName, extract: checkRepoError, location: repoName	from RepoCheck.js line 106
  997, "Repository doesn’t exist", details, username, repoCode, repoName, location: manifestLocation, extra: repoCode	from checkBookPackage.js line 174
  997, "Repository doesn’t exist", details, username, repoCode, repoName, location: manifestLocation, extra: repoCode	from checkBookPackage.js line 235
  997, "Repository doesn’t exist", details, username, repoCode, repoName, location: repoLocation, extra: repoCode	from checkBookPackage.js line 374
  997, "Repository doesn’t exist", details, username, repoCode, repoName, location: generalLocation, extra: repoCode	from checkBookPackage.js line 537
  997, "Repository doesn’t exist", details, username, repoCode, repoName, location: generalLocation, extra: repoCode	from checkBookPackage.js line 563
  996, "Unable to load", details: `username=$username error=$cBPgfError`, repoName, filename: MANIFEST_FILENAME, location: manifestLocation, extra: repoCode	from checkBookPackage.js line 178
  996, "Unable to load", details: `username=$username error=$cBPgfError`, repoName, filename: MANIFEST_FILENAME, location: manifestLocation, extra: repoCode	from checkBookPackage.js line 239
  996, "Unable to load", details, repoCode, repoName, filename, location: repoLocation, extra: repoCode	from checkBookPackage.js line 378
  996, "Unable to load", details, bookID, location: generalLocation, extra: repoCode	from checkBookPackage.js line 539
  996, "Unable to load", details, bookID, C, V, filename: thisPath, location: `$generalLocation $thisPath`, extra: repoCode	from checkBookPackage.js line 567
  996, "Unable to load", details: `username=$username error=$cRgfError`, bookID: ourBookID, filename: thisFilename, location: `$givenLocation $thisFilepath`, extra: repoName	from checkRepo.js line 263
  995, "File extension is not recognized, so treated as plain text.", filename, location: filename	from checkFileContents.js line 88
  993, "Unresolved GIT conflict", characterIndex, extract, location: ourLocation	from field-text-check.js line 112
  993, "Unresolved GIT conflict", characterIndex, extract, location: ourLocation	from plain-text-check.js line 131
  992, "Unresolved GIT conflict", characterIndex, extract, location: ourLocation	from field-text-check.js line 118
  992, "Unresolved GIT conflict", characterIndex, extract, location: ourLocation	from plain-text-check.js line 135
  991, "Unresolved GIT conflict", characterIndex, extract, location: ourLocation	from field-text-check.js line 124
  991, "Unresolved GIT conflict", characterIndex, extract, location: ourLocation	from plain-text-check.js line 139
  990, "Unable to load file", details: `username=$username`, repoName, filename ], elapsedSeconds: 0 ;	from FileCheck.js line 63
  989, "Unable to find/load repository", location: ourLocation	from checkRepo.js line 186
  988, `Wrong number of tabbed fields (expected $NUM_EXPECTED_TN_TSV_FIELDS)`, extract: `Found $fields.length field$fields.length === 1 ? '' : 's'`, C, V, rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 248
  988, `Wrong number of tabbed fields (expected $NUM_EXPECTED_ANNOTATION_TSV_FIELDS)`, extract: `Found $fields.length field$fields.length === 1 ? '' : 's'`, C, V, rowID, lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 229
  987, C, V, "Expected \\id line to start with book identifier", lineNumber: n, characterIndex: 4, extract, location: ourLocation	from usfm-text-check.js line 936
  986, "Repository doesn’t seem to exist", details: `username=$username`, location: givenLocation, extra: repoName	from checkRepo.js line 166
  985, `Field does not match schema $errorObject.keyword`, details: errorObject.message, fieldName: errorObject.dataPath, location: ourLocation	from manifest-text-check.js line 676
  984, `Found wrong number of TSV fields (expected $NUM_EXPECTED_TN_TSV_FIELDS)`, details: `Found $fields.length field$fields.length === 1 ? '' : 's'`, rowID, location: ourRowLocation	from tn-table-row-check.js line 549
  984, `Found wrong number of TSV fields (expected $NUM_EXPECTED_ANNOTATION_TSV_FIELDS)`, details: `Found $fields.length field$fields.length === 1 ? '' : 's'`, rowID, location: ourRowLocation	from annotation-row-check.js line 529
  979, "Invalid book identifier passed to checkTN_TSVDataRow", location: ` '$bookID' in first parameter: $tlcNCerror`	from tn-table-row-check.js line 352
  979, "Invalid book identifier passed to checkAnnotationTSVDataRow", location: ` '$bookID' in first parameter: $tlcNCerror`	from annotation-row-check.js line 339
  978, "Wrong book identifier", details: `expected '$bookID'`, fieldName: 'Book', rowID, extract: B, location: ourRowLocation	from tn-table-row-check.js line 367
  977, "Missing book identifier", characterIndex: 0, rowID, location: ourRowLocation	from tn-table-row-check.js line 370
  976, "Wrong chapter number", details: `expected '$givenC'`, fieldName: 'Chapter', rowID, extract: C, location: ourRowLocation	from tn-table-row-check.js line 375
  976, "Wrong chapter number", details: `expected '$givenC'`, fieldName: 'Reference', rowID, extract: C, location: ourRowLocation	from annotation-row-check.js line 357
  975, "Wrong verse number", details: `expected '$givenV'`, rowID, fieldName: 'Verse', extract: V, location: ourRowLocation	from tn-table-row-check.js line 407
  975, "Wrong verse number", details: `expected '$givenV'`, rowID, fieldName: 'Reference', extract: V, location: ourRowLocation	from annotation-row-check.js line 393
  956, "Got empty manifest file", repoName, filename: MANIFEST_FILENAME, location: manifestLocation, extra: `$repoCode MANIFEST`	from checkBookPackage.js line 199
  956, "Got empty manifest file", repoName, filename: MANIFEST_FILENAME, location: manifestLocation, extra: `$repoCode MANIFEST`	from checkBookPackage.js line 260
  950, "tC cannot yet process '*' language code", characterIndex, extract, location: ourLocation	from tn-links-check.js line 202
  947, "Missing manifest.yaml", location: ourLocation, extra: `$repoName MANIFEST`	from checkRepo.js line 288
  946, "Missing LICENSE.md", location: ourLocation, extra: `$repoName LICENSE`	from checkRepo.js line 286
  944, `USFM3 Grammar Check ($strictnessString mode) doesn’t pass`, filename, location: ourLocation	from BCS-usfm-grammar-check.js line 178
  943, `USFM3 toJSON Check doesn’t pass`, location: ourLocation	from usfm-js-check.js line 91
  942, "USFM Grammar check fails", location	from usfm-text-check.js line 985
  939, "Key is missing for project", details: keyName, extract: JSON.stringify(projectEntry), location: ourLocation	from manifest-text-check.js line 688
  938, `Unable to find project file mentioned in manifest`, extract: projectFilepath, location: ourLocation	from manifest-text-check.js line 705
  937, `Linked project file seems empty`, extract: projectFilepath, location: ourLocation	from manifest-text-check.js line 707
  936, `Error loading manifest project link`, details: trcGCerror, extract: projectFilepath, location: ourLocation	from manifest-text-check.js line 709
  929, "'projects' key is missing", location: ourLocation	from manifest-text-check.js line 641
  928, "'dublin_core' key is missing", location: ourLocation	from manifest-text-check.js line 639
  920, yamlError.message, location: ourLocation )	from yaml-text-check.js line 163
  919, "Missing OrigQuote field", fieldName: 'OrigQuote', rowID, location: ourRowLocation	from tn-table-row-check.js line 479
  919, "Missing Quote field", fieldName: 'Quote', rowID, location: ourRowLocation	from annotation-row-check.js line 470
  917, "Unable to find duplicate original language quote in verse text", details: `occurrence=$occurrenceString, passage ►$verseText◄`, extract, location: ourLocation	from orig-quote-check.js line 332
  916, "Unable to find original language quote in verse text", details: "quote which starts with a space" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 369
  916, "Unable to find original language quote in verse text", details: "quote which ends with a space" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 372
  916, "Unable to find original language quote in verse text", details: "quote which starts with 'word joiner'" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 375
  916, "Unable to find original language quote in verse text", details: "quote which ends with 'word joiner'" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 378
  916, "Unable to find original language quote in verse text", details: "quote which starts with 'zero-width space'" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 381
  916, "Unable to find original language quote in verse text", details: "quote which ends with 'zero-width space'" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 384
  916, "Unable to find original language quote in verse text", details: "quote which starts with 'zero-width joiner'" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 387
  916, "Unable to find original language quote in verse text", details: "quote which ends with 'zero-width joiner'" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''), extract, location: ourLocation	from orig-quote-check.js line 390
  916, "Unable to find original language quote in verse text", details: noBreakSpaceText ? noBreakSpaceText : `passage ►$verseText◄`, extract, location: ourLocation	from orig-quote-check.js line 393
  915, "Unable to find original language quote portion in verse text", details: `passage ►$verseText◄`, extract, location: ourLocation	from orig-quote-check.js line 319
  914, "Unable to find original language quote portion in the right place in the verse text", details: `passage ►$verseText◄`, extract, location: ourLocation	from orig-quote-check.js line 316
  912, 'Missing | character in \\w line', lineNumber, C, V, characterIndex, extract, location: lineLocation	from usfm-text-check.js line 627
  911, 'Missing | character in \\w field', details, lineNumber, C, V, characterIndex, extract, location: lineLocation	from usfm-text-check.js line 683
  909, "Seems original language quote might not start at the beginning of a word", details: `passage ►$verseText◄`, characterIndex: 0, extract, location: ourLocation	from orig-quote-check.js line 349
  908, "Seems original language quote might not finish at the end of a word", details: `passage ►$verseText◄`, characterIndex: fieldText.length, extract, location: ourLocation	from orig-quote-check.js line 358
  903, "Bad function call: should be given a valid book abbreviation", extract: bookID, location: ` (not '$bookID')$ourLocation`	from usfm-text-check.js line 801
  902, "Bad function call: should be given a valid book abbreviation", extract: bookID, location: ` (not '$bookID')$generalLocation` ); return checkBookPackageResult;	from checkBookPackage.js line 284
  900, "Bad parameter: should be given a valid book abbreviation", extract: bookIDList, location: ` (not '$bookIDList')`	from checkBookPackages.js line 66
  895, "Field contains zero-width space(s)", characterIndex, extract, location: ourLocation	from field-text-check.js line 97
  889, `Unable to find TA link`, extract: fieldText, location: `$ourLocation $filepath`	from ta-reference-check.js line 109
  888, `Error loading TA link`, extract: fieldText, location: `$ourLocation $filepath: $trcGCerror`	from ta-reference-check.js line 114
  887, `Linked TA article seems empty`, extract: fieldText, location: `$ourLocation $filepath`	from ta-reference-check.js line 111
  886, `Unable to find $fieldName TA link`, extract: regexResultArray[0], location: `$ourLocation $filepath`	from tn-links-check.js line 224
  885, `Error loading $fieldName TA link`, extract: regexResultArray[0], location: `$ourLocation $filepath: $trcGCerror`	from tn-links-check.js line 219
  884, `Linked $fieldName TA article seems empty`, extract: regexResultArray[0], location: `$ourLocation $filepath`	from tn-links-check.js line 226
  883, `Unable to find $fieldName TW link`, extract: regexResultArray[0], location: `$ourLocation $filepath`	from tn-links-check.js line 273
  882, `Error loading $fieldName TW link`, extract: regexResultArray[0], location: `$ourLocation $filepath: $trcGCerror`	from tn-links-check.js line 270
  881, `Linked $fieldName TW article seems empty`, extract: regexResultArray[0], location: `$ourLocation $filepath`	from tn-links-check.js line 276
  879, `Badly formatted Resource Container link`, extract: fieldText, location: `$ourLocation $filepath`	from ta-reference-check.js line 96
  875, "Unexpected USFM field", details, lineNumber, C, V, extract, location: lineLocation	from usfm-text-check.js line 730
  873, `Mismatched $opener$closer fields`, extract: `(left=$lCount.toLocaleString(), right=$rCount.toLocaleString())`, location: fileLocation	from usfm-text-check.js line 552
  869, "Chapter number out of range", C: chapterNumberString, extract: `$bookID $chapterNumberString`, location: CVlocation	from usfm-text-check.js line 402
  868, "Verse number out of range", C: chapterNumberString, V: verseNumberString, extract: `$bookID $chapterNumberString:$verseNumberString`, location: CVlocation	from usfm-text-check.js line 441
  867, C: chapterNumberString, V: `$v`, "Verse appears to be missing", location: CVlocation	from usfm-text-check.js line 455
  866, C: chapterNumberString, V: `$v`, "Verse seems to have no text", location: CVlocation	from usfm-text-check.js line 460
  851, bookID === 'OBS' ? "Unable to load OBS story text" : "Unable to load original language verse text", location: ourLocation	from orig-quote-check.js line 288
  849, `Unexpected '$badCharCombination' character combination`, characterIndex, extract, location: ourLocation	from field-text-check.js line 363
  845, `Mismatched [[ ]] link characters`, details: `left=$leftCount.toLocaleString(), right=$rightCount.toLocaleString()`, location: ourLocation	from tn-links-check.js line 469
  844, `Mismatched [[rc:// ]] link characters`, details: `left=$leftCount.toLocaleString(), right=$rightCount.toLocaleString()`, location: ourLocation	from tn-links-check.js line 473
  843, `Mismatched [ ]( ) link characters`, details: `left=$leftCount.toLocaleString(), middle=$middleCount.toLocaleString(), right=$rightCount.toLocaleString()`, location: ourLocation	from tn-links-check.js line 480
  824, `Invalid zero chapter number`, extract: C, rowID, fieldName: 'Chapter', location: ourRowLocation	from tn-table-row-check.js line 380
  824, `Invalid zero chapter number`, extract: C, rowID, fieldName: 'Reference', location: ourRowLocation	from annotation-row-check.js line 362
  823, `Invalid large chapter number`, extract: C, rowID, fieldName: 'Chapter', location: ourRowLocation	from tn-table-row-check.js line 385
  823, `Invalid large chapter number`, extract: C, rowID, fieldName: 'Reference', location: ourRowLocation	from annotation-row-check.js line 367
  822, "Unable to check chapter number", extract: C, rowID, fieldName: 'Chapter', location: ourRowLocation	from tn-table-row-check.js line 395
  822, "Expected field to contain an integer", lineNumber, characterIndex: 3, extract: `\\c $rest`, C, V, location: lineLocation	from usfm-text-check.js line 749
  822, "Expected field to contain an integer", characterIndex: 3, extract: `\\v $rest`, C, V, location: lineLocation	from usfm-text-check.js line 753
  822, "Unable to check chapter number", extract: C, rowID, fieldName: 'Reference', location: ourRowLocation	from annotation-row-check.js line 380
  821, "Bad chapter number", extract: C, rowID, fieldName: 'Chapter', location: ourRowLocation	from tn-table-row-check.js line 400
  821, "Bad chapter number", extract: C, rowID, fieldName: 'Reference', location: ourRowLocation	from annotation-row-check.js line 386
  820, "Missing chapter number", rowID, fieldName: 'Chapter', location: ` ?:$V$ourRowLocation`	from tn-table-row-check.js line 403
  820, "Missing chapter number", rowID, fieldName: 'Reference', location: ` ?:$V$ourRowLocation`	from annotation-row-check.js line 389
  819, "Missing compulsory USFM line", extract: `missing \\$compulsoryMarker`, location: fileLocation	from usfm-text-check.js line 574
  814, "Invalid zero verse number", rowID, fieldName: 'Verse', extract: V, location: ourRowLocation	from tn-table-row-check.js line 412
  814, "Invalid zero verse number", rowID, fieldName: 'Reference', extract: V, location: ourRowLocation	from annotation-row-check.js line 398
  813, "Invalid large verse number", rowID, fieldName: 'Verse', extract: V, location: ourRowLocation	from tn-table-row-check.js line 416
  813, "Invalid large verse number", rowID, fieldName: 'Reference', extract: V, location: ourRowLocation	from annotation-row-check.js line 402
  812, "Unable to check verse number", rowID, fieldName: 'Verse', location: ourRowLocation	from tn-table-row-check.js line 418
  812, "Unable to check verse number", rowID, fieldName: 'Reference', location: ourRowLocation	from annotation-row-check.js line 404
  811, "Bad verse number", rowID, fieldName: 'Verse', location: ` '$V'$ourRowLocation`	from tn-table-row-check.js line 422
  811, "Bad verse number", rowID, fieldName: 'Reference', location: ` '$V'$ourRowLocation`	from annotation-row-check.js line 408
  810, "Missing verse number", rowID, fieldName: 'Verse', location: ` after $C:?$ourRowLocation`	from tn-table-row-check.js line 425
  810, "Missing verse number", rowID, fieldName: 'Reference', location: ` after $C:?$ourRowLocation`	from annotation-row-check.js line 411
  792, `Invalid occurrence field`, fieldName: 'Occurrence', rowID, extract: occurrence, location: ourRowLocation	from tn-table-row-check.js line 493
  792, `Invalid occurrence field`, fieldName: 'Occurrence', rowID, extract: occurrence, location: ourRowLocation	from annotation-row-check.js line 484
  791, `Missing occurrence field`, fieldName: 'Occurrence', rowID, location: ourRowLocation	from tn-table-row-check.js line 498
  791, `Missing occurrence field`, fieldName: 'Occurrence', rowID, location: ourRowLocation	from annotation-row-check.js line 489
  790, C, V, "Missing verse number", rowID, lineNumber: n + 1, location: ` after $C:$lastV$ourLocation`	from tn-table-text-check.js line 227
  790, C, V, "Missing verse number", rowID, lineNumber: n + 1, location: ` after $C:$lastV$ourLocation`	from annotation-table-check.js line 208
  788, "Only 'Just-In-Time Training' TA articles allowed here", fieldName: 'SupportReference', extract: supportReference, rowID, location: ourRowLocation	from tn-table-row-check.js line 456
  788, "Only 'Just-In-Time Training' TA articles allowed here", fieldName: 'SupportReference', extract: supportReference, rowID, location: ourRowLocation	from annotation-row-check.js line 447
  787, "Link to TA should also be in OccurrenceNote", fieldName: 'SupportReference', extract: supportReference, rowID, location: ourRowLocation	from tn-table-row-check.js line 461
  787, "Link to TA should also be in Annotation", fieldName: 'SupportReference', extract: supportReference, rowID, location: ourRowLocation	from annotation-row-check.js line 452
  786, "Link to TA should also be in SupportReference", details, rowID, fieldName: 'OccurrenceNote', extract: regexResultArray[1], location: ourRowLocation	from tn-table-row-check.js line 529
  786, "Link to TA should also be in SupportReference", details, rowID, fieldName: 'Annotation', extract: adjustedLink, location: ourRowLocation	from annotation-row-check.js line 508
  779, "Missing row ID field", fieldName: 'Verse', location: ourRowLocation	from tn-table-row-check.js line 428
  779, "Missing row ID field", fieldName: 'Reference', location: ourRowLocation	from annotation-row-check.js line 414
  778, "Row ID should be exactly 4 characters", details: `not $rowID.length`, rowID, fieldName: 'ID', extract: rowID, location: ourRowLocation	from tn-table-row-check.js line 431
  778, "Row ID should be exactly 4 characters", details: `not $rowID.length`, rowID, fieldName: 'ID', extract: rowID, location: ourRowLocation	from annotation-row-check.js line 417
  777, `Bad punctuation nesting: $char closing character doesn’t match`, details, lineNumber: n, characterIndex, extract, location: ourLocation	from plain-text-check.js line 195
  776, 'Unexpected " straight quote character', details, lineNumber, C, V, extract, location: lineLocation	from usfm-text-check.js line 717
  775, "Unexpected ' straight quote character", details, lineNumber, C, V, extract, location: lineLocation	from usfm-text-check.js line 722
  774, `Unexpected $char closing character (no matching opener)`, lineNumber: n, characterIndex, extract, location: ourLocation	from plain-text-check.js line 202
  773, `Unexpected trailing zero-width joiner`, characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 163
  772, `Unexpected trailing word-joiner`, characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 158
  771, `Unexpected leading zero-width joiner`, characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 141
  770, `Unexpected leading word-joiner`, characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 137
  769, C, V, "Verse bridge numbers not in ascending order", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, Math.max(9, extractLength))$rest.length > extractLength ? '…' : '' ($firstV → $secondV)`, location: ourLocation	from usfm-text-check.js line 912
  768, `At end of text with unclosed $char opening character`, details, lineNumber: n, characterIndex: x, extract, location: ourLocation	from plain-text-check.js line 220
  766, C, V, "Bridged verse numbers didn’t increment correctly", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, Math.max(9, extractLength))$rest.length > extractLength ? '…' : '' ($lastV → $firstV)`, location: ourLocation	from usfm-text-check.js line 914
  765, "Unexpected link", characterIndex, extract, location: ourLocation	from field-text-check.js line 436
  764, C, V, "Chapter number didn’t increment correctly", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, halfLength)$rest.length > halfLength ? '…' : '' ($lastC ? lastC : '0' → $C)`, location: ourLocation	from usfm-text-check.js line 885
  763, C, V, "Verse number didn’t increment correctly", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, halfLength)$rest.length > halfLength ? '…' : '' ($lastV ? lastV : '0' → $V)`, location: ourLocation	from usfm-text-check.js line 898
  762, "Unable to convert verse bridge numbers to integers", C: chapterNumberString, V: verseNumberString, characterIndex: 3, extract: verseNumberString, location: `$CVlocation with $usfmVIerror`	from usfm-text-check.js line 429
  762, C, V, "Unable to convert verse bridge numbers to integers", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, Math.max(9, extractLength))$rest.length > extractLength ? '…' : ''`, location: ourLocation	from usfm-text-check.js line 908
  761, C, V, "Verse number didn’t increment correctly", lineNumber: n, characterIndex: 3, extract: `$restRest.substring(0, halfLength)$restRest.length > halfLength ? '…' : '' ($lastV ? lastV : '0' → $V)`, location: ourLocation	from usfm-text-check.js line 929
  751, "Invalid zero occurrence field when we have an original quote", fieldName: 'Occurrence', rowID, extract: occurrence, location: ourRowLocation	from tn-table-row-check.js line 484
  751, "Invalid zero occurrence field when we have an original quote", fieldName: 'Occurrence', rowID, extract: occurrence, location: ourRowLocation	from annotation-row-check.js line 475
  750, "Missing occurrence field when we have an original quote", fieldName: 'Occurrence', rowID, location: ourRowLocation	from tn-table-row-check.js line 475
  750, "Missing occurrence field when we have an original quote", fieldName: 'Occurrence', rowID, location: ourRowLocation	from annotation-row-check.js line 466
  749, "Markdown image link seems faulty", lineNumber, extract: fetchLink, location: lineLocation	from markdown-text-check.js line 140
  748, "Error fetching markdown image link", lineNumber, extract: fetchLink, location: lineLocation	from markdown-text-check.js line 149
  747, "Bad function call: should be given a valid book abbreviation", extract: bookID, location: ` (not '$bookID')$ourLocation`	from tn-table-text-check.js line 107
  747, "Bad function call: should be given a valid book abbreviation", extract: bookID, location: ` (not '$bookID')$ourLocation`	from annotation-table-check.js line 90
  746, "Bad TSV header", lineNumber: n + 1, location: `$ourLocation: '$lines[0]'`	from tn-table-text-check.js line 122
  746, "Bad TSV header", lineNumber: n + 1, location: `$ourLocation: '$lines[0]'`	from annotation-table-check.js line 106
  745, C, V, `Wrong '$B' book identifier (expected '$bookID')`, rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 177
  744, C, V, "Missing book identifier", rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 180
  743, "Chapter numbers of markdown Bible link don’t match", details: `$C1 vs $chapterInt`, extract: totalLink, location: ourLocation	from tn-links-check.js line 322
  743, "Chapter numbers of markdown Bible link don’t match", details: `$C1 vs $chapterInt`, extract: totalLink, location: ourLocation	from tn-links-check.js line 374
  743, "Chapter numbers of markdown Bible link don’t match", details: `$C1 vs $chapterInt`, extract: totalLink, location: ourLocation	from tn-links-check.js line 426
  742, "Verse numbers of markdown Bible link don’t match", details: `$V1 vs $verseInt`, extract: totalLink, location: ourLocation	from tn-links-check.js line 328
  742, "Verse numbers of markdown Bible link don’t match", details: `$V1 vs $verseInt`, extract: totalLink, location: ourLocation	from tn-links-check.js line 380
  742, "Verse numbers of markdown Bible link don’t match", details: `$V1 vs $verseInt`, extract: totalLink, location: ourLocation	from tn-links-check.js line 432
  739, C, V, "Missing chapter number", rowID, lineNumber: n + 1, location: ` after $lastC:$V$ourLocation`	from tn-table-text-check.js line 204
  739, C, V, "Missing chapter number", rowID, lineNumber: n + 1, location: ` after $lastC:$V$ourLocation`	from annotation-table-check.js line 185
  738, C, V, "Bad verse number", rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 223
  738, C, V, "Bad verse number", rowID, lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 204
  737, C, V, "Invalid large chapter number", rowID, lineNumber: n + 1, extract: C, location: ourLocation	from tn-table-text-check.js line 191
  737, C, V, "Invalid large chapter number", rowID, lineNumber: n + 1, extract: C, location: ourLocation	from annotation-table-check.js line 172
  736, C, V, "Receding chapter number", details: `'$C' after '$lastC'`, rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 195
  736, C, V, "Receding chapter number", details: `'$C' after '$lastC'`, rowID, lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 176
  735, C, V, "Advancing chapter number", details: `'$C' after '$lastC'`.rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 197
  735, C, V, "Advancing chapter number", details: `'$C' after '$lastC'`.rowID, lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 178
  734, C, V, "Bad chapter number", rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 201
  734, C, V, "Invalid large verse number", details: `for chapter $C`, rowID, lineNumber: n + 1, extract: V, location: ourLocation	from tn-table-text-check.js line 213
  734, C, V, "Bad chapter number", rowID, lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 182
  734, C, V, "Invalid large verse number", details: `for chapter $C`, rowID, lineNumber: n + 1, extract: V, location: ourLocation	from annotation-table-check.js line 194
  733, C, V, "Receding verse number", details: `'$V' after '$lastV for chapter $C`, rowID, lineNumber: n + 1, extract: V, location: ourLocation	from tn-table-text-check.js line 217
  733, C, V, "Receding verse number", details: `'$V' after '$lastV for chapter $C`, rowID, lineNumber: n + 1, extract: V, location: ourLocation	from annotation-table-check.js line 198
  730, C, V, "Missing ID", fieldName: 'ID', lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 233
  730, C, V, "Missing ID", fieldName: 'ID', lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 214
  729, C, V, `Duplicate '$rowID' ID`, fieldName: 'ID', rowID, lineNumber: n + 1, location: ourLocation	from tn-table-text-check.js line 231
  729, C, V, `Duplicate '$rowID' ID`, fieldName: 'ID', rowID, lineNumber: n + 1, location: ourLocation	from annotation-table-check.js line 212
  724, C, V, "Unable to convert chapter number to integer", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, halfLength)$rest.length > halfLength ? '…' : ''`, location: ourLocation	from usfm-text-check.js line 881
  723, C, V, "Unable to convert verse number to integer", lineNumber: n, characterIndex: 3, extract: `$rest.substring(0, halfLength)$rest.length > halfLength ? '…' : ''`, location: ourLocation	from usfm-text-check.js line 894
  720, C, V, "Unable to convert internal verse number to integer", lineNumber: n, characterIndex: 3, extract: `$restRest.substring(0, halfLength)$restRest.length > halfLength ? '…' : ''`, location: ourLocation	from usfm-text-check.js line 925
  716, `Misplaced $rightChar character`, extract: regexResultArray[0], location: ourLocation	from field-text-check.js line 417
  711, "Expected compulsory content", C, V, lineNumber, characterIndex: marker.length, location: ` after \\$marker marker$lineLocation`	from usfm-text-check.js line 777
  703, C, V, "Unexpected CarriageReturn character", lineNumber: n, characterIndex, extract, location: ourLocation	from usfm-text-check.js line 845
  655, "Bad chapter number in markdown Bible link", details: `$linkBookCode $chapterInt vs $numChaptersThisBook chapters`, extract: totalLink, location: ourLocation	from tn-links-check.js line 344
  655, "Bad chapter number in markdown Bible link", details: `$linkBookCode $chapterInt vs $numChaptersThisBook chapters`, extract: totalLink, location: ourLocation	from tn-links-check.js line 396
  655, "Bad chapter number in markdown Bible link", details: `$linkBookCode $chapterInt vs $numChaptersThisBook chapters`, extract: totalLink, location: ourLocation	from tn-links-check.js line 448
  653, "Bad verse number in markdown Bible link", details: `$linkBookCode $chapterInt:$verseInt vs $numVersesThisChapter verses`, extract: totalLink, location: ourLocation	from tn-links-check.js line 346
  653, "Bad verse number in markdown Bible link", details: `$linkBookCode $chapterInt:$verseInt vs $numVersesThisChapter verses`, extract: totalLink, location: ourLocation	from tn-links-check.js line 398
  653, "Bad verse number in markdown Bible link", details: `$linkBookCode $chapterInt:$verseInt vs $numVersesThisChapter verses`, extract: totalLink, location: ourLocation	from tn-links-check.js line 450
  649, "More [[ ]] links than valid TA/TW links", details: `detected $totalLinks2 link$totalLinks2 === 1 ? '' : 's' but $twaLinkCount ? `only $twaLinkCount` : 'no' TA/TW link$twaLinkCount === 1 ? '' : 's' from $JSON.stringify(linksList2)`, location: ourLocation	from tn-links-check.js line 461
  648, "More [ ]( ) links than valid Bible links", details: `detected $totalLinks1 link$totalLinks1 === 1 ? '' : 's' but $BibleLinkCount ? `only $BibleLinkCount` : 'no' Bible link$BibleLinkCount === 1 ? '' : 's' from $JSON.stringify(linksList1)`, location: ourLocation	from tn-links-check.js line 457
  644, "USFM3 Grammar Check (relaxed mode) doesn’t pass either", location: fileLocation	from usfm-text-check.js line 239
  638, "Only found whitespace", location: ourLocation	from field-text-check.js line 103
  638, "Only found whitespace", location: ourLocation	from plain-text-check.js line 123
  603, "USFM marker doesn’t end with space", C, V, lineNumber, characterIndex, extract, location: ourLocation	from usfm-text-check.js line 815
  601, "Unable to load", details: `username=$username error=$gcUHBerror`, OBSPathname, location: ourLocation, extra: OBSRepoName	from orig-quote-check.js line 111
  601, "Unable to load", details: `username=$username error=$gcUHBerror`, filename, location: ourLocation, extra: originalLanguageRepoName	from orig-quote-check.js line 143
  601, "Unable to load", details: `username=$username error=$gcUGNTerror`, filename, location: ourLocation, extra: originalLanguageRepoName	from orig-quote-check.js line 151
  600, `$regexResultsArray.length link target$regexResultsArray.length === 1 ? ' is' : 's are' still being checked…`, location: ourLocation	from field-link-check.js line 152
  583, "Unexpected newLine character", characterIndex, extract, location: ourLocation	from field-text-check.js line 231
  582, "Unexpected carriageReturn character", characterIndex, extract, location: ourLocation	from field-text-check.js line 237
  581, "Unexpected non-break space character", characterIndex, extract, location: ourLocation	from field-text-check.js line 243
  552, C, V, "Invalid zero verse number", details: `for chapter $C`, rowID, lineNumber: n + 1, extract: V, location: ourLocation	from tn-table-text-check.js line 211
  552, C, V, "Invalid zero verse number", details: `for chapter $C`, rowID, lineNumber: n + 1, extract: V, location: ourLocation	from annotation-table-check.js line 192
  551, C, V, `Invalid zero chapter number`, rowID, lineNumber: n + 1, extract: C, location: ourLocation	from tn-table-text-check.js line 189
  551, C, V, `Invalid zero chapter number`, rowID, lineNumber: n + 1, extract: C, location: ourLocation	from annotation-table-check.js line 170
  539, "File starts with empty line", characterIndex, extract, location: ourLocation	from plain-text-check.js line 145
  538, "File ends without newline character", characterIndex, extract, location: ourLocation	from plain-text-check.js line 150
  519, "Missing expected USFM line", extract: `missing \\$expectedMarker`, location: fileLocation	from usfm-text-check.js line 578
  518, "Missing expected USFM line", extract: `missing \\$expectedMarker`, location: fileLocation	from usfm-text-check.js line 586
  517, "Missing expected USFM line", extract: `missing \\$expectedMarker`, location: fileLocation	from usfm-text-check.js line 582
  472, "Nesting of header levels seems confused", lineNumber: n, characterIndex: 0, location: ourLocation	from markdown-text-check.js line 215
  450, "Resource container link should have '*' language code", details: `not '$languageCode'`, characterIndex, extract, location: ourLocation	from tn-links-check.js line 198
  441, `Unknown linkType parameter`, extract: linkType	from field-link-check.js line 134
  439, "Error fetching link", location: ` $fetchLink`	from field-link-check.js line 44
  438, `Blank field / missing link (expected $linkOptions.expectedCount link$linkOptions.expectedCount === 1 ? "" : "s")`, location: ourLocation	from field-link-check.js line 106
  401, `Unexpected content after \\$marker marker`, C, V, lineNumber, characterIndex: marker.length, extract: rest, location: lineLocation	from usfm-text-check.js line 775
  399, C, V, "Useless paragraph marker", lineNumber: n, characterIndex: 1, details: `'\\$lastMarker' before '\\$marker'`, location: ourLocation	from usfm-text-check.js line 949
  375, "Ellipsis without surrounding snippet", location: ourLocation	from orig-quote-check.js line 325
  374, "Field contains zero-width space(s)", fieldName: 'SupportReference', rowID, location: ourRowLocation	from tn-table-row-check.js line 464
  374, "Field contains zero-width space(s)", fieldName: 'GLQuote', rowID, location: ourRowLocation	from tn-table-row-check.js line 504
  374, "Field contains zero-width space(s)", fieldName: 'OccurrenceNote', rowID, location: ourRowLocation	from tn-table-row-check.js line 517
  374, "Field contains zero-width space(s)", fieldName: 'SupportReference', rowID, location: ourRowLocation	from annotation-row-check.js line 455
  374, "Field contains zero-width space(s)", fieldName: 'Annotation', rowID, location: ourRowLocation	from annotation-row-check.js line 495
  373, "Field is only whitespace", fieldName: 'SupportReference', rowID, location: ourRowLocation	from tn-table-row-check.js line 449
  373, "Field is only whitespace", fieldName: 'GLQuote', rowID, location: ourRowLocation	from tn-table-row-check.js line 506
  373, "Field is only whitespace", fieldName: 'OccurrenceNote', rowID, location: ourRowLocation	from tn-table-row-check.js line 519
  373, "Field is only whitespace", fieldName: 'SupportReference', rowID, location: ourRowLocation	from annotation-row-check.js line 438
  373, "Field is only whitespace", fieldName: 'Annotation', rowID, location: ourRowLocation	from annotation-row-check.js line 497
  312, 'Possible unclosed footnote', details, lineNumber, C, V, location: lineLocation	from usfm-text-check.js line 651
  301, `Unexpected whitespace after \\$marker marker`, C, V, lineNumber, characterIndex: marker.length, extract: rest, location: lineLocation	from usfm-text-check.js line 773
  287, `Not enough links (expected $linkOptions.expectedCount link$linkOptions.expectedCount === 1 ? "" : "s")`, location: ` (only found $regexResultsArray.length)$ourLocation`	from field-link-check.js line 148
  274, "Missing OccurrenceNote field", fieldName: 'OccurrenceNote', rowID, location: ourRowLocation	from tn-table-row-check.js line 535
  274, "Missing Annotation field", fieldName: 'Annotation', rowID, location: ourRowLocation	from annotation-row-check.js line 515
  218, "Using deprecated USFM marker", extract: `\\$deprecatedMarker`, location: fileLocation	from usfm-text-check.js line 589
  195, `Unexpected $punctChar character at start of line`, characterIndex, extract, location: ourLocation	from field-text-check.js line 314
  179, "Unexpected space before ellipse character", characterIndex, extract, location: ourLocation	from field-text-check.js line 259
  178, "Unexpected space after ellipse character", characterIndex, extract, location: ourLocation	from field-text-check.js line 265
  176, "Row ID should start with a lowercase letter", characterIndex: 0, rowID, fieldName: 'ID', extract: rowID, location: ourRowLocation	from tn-table-row-check.js line 438
  176, "Row ID should start with a lowercase letter", characterIndex: 0, rowID, fieldName: 'ID', extract: rowID, location: ourRowLocation	from annotation-row-check.js line 424
  175, "Row ID should end with a lowercase letter or digit", characterIndeX: 3, rowID, fieldName: 'ID', extract: rowID, location: ourRowLocation	from tn-table-row-check.js line 440
  175, "Row ID should end with a lowercase letter or digit", characterIndeX: 3, rowID, fieldName: 'ID', extract: rowID, location: ourRowLocation	from annotation-row-check.js line 426
  174, "Row ID characters should only be lowercase letters, digits, or hypen", fieldName: 'ID', characterIndex: 1, rowID, extract: rowID, location: ourRowLocation	from tn-table-row-check.js line 442
  174, "Row ID characters should only be lowercase letters, digits, or hypen", fieldName: 'ID', characterIndex: 1, rowID, extract: rowID, location: ourRowLocation	from annotation-row-check.js line 428
  173, "Row ID characters should only be lowercase letters, digits, or hypen", fieldName: 'ID', characterIndex: 2, rowID, extract: rowID, location: ourRowLocation	from tn-table-row-check.js line 444
  173, "Row ID characters should only be lowercase letters, digits, or hypen", fieldName: 'ID', characterIndex: 2, rowID, extract: rowID, location: ourRowLocation	from annotation-row-check.js line 430
  172, "Header levels should only increment by one", lineNumber: n, characterIndex: 0, location: ourLocation	from markdown-text-check.js line 208
  159, "Should use proper ellipse character (not periods)", characterIndex, extract, location: ourLocation	from orig-quote-check.js line 249
  158, "Unexpected space(s) beside ellipse character", characterIndex, extract, location: ourLocation	from orig-quote-check.js line 258
  157, "Unexpected space(s) beside ↔ divider character", characterIndex, extract, location: ourLocation	from orig-quote-check.js line 265
  156, "Unexpected space(s) beside ellipse characters", characterIndex, extract, location: ourLocation	from orig-quote-check.js line 272
  148, "'checking' key is missing", location: ourLocation	from manifest-text-check.js line 643
  143, "Unknown Bible book name in link", details: totalLink, extract: optionalB1, location: ourLocation	from tn-links-check.js line 313
  143, "Unknown Bible book name in link", details: totalLink, extract: optionalB1, location: ourLocation	from tn-links-check.js line 365
  143, "Unknown Bible book name in link", details: totalLink, extract: optionalB1, location: ourLocation	from tn-links-check.js line 417
  138, "File ends with additional blank line(s)", characterIndex, extract, location: ourLocation	from plain-text-check.js line 155
  111, `Bad options for checkFieldLinks: expectedCount=$linkOptions.expectedCount but allowedCount=$linkOptions.allowedCount`	from field-link-check.js line 116
  110, `Unexpected leading spaces`, characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 132
  109, `Unexpected leading space`, characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 134
  107, "Unexpected leading line break", characterIndex: 0, extract, location: ourLocation	from field-text-check.js line 173
  104, "Unexpected trailing line break", characterIndex: fieldText.length - 1, extract, location: ourLocation	from field-text-check.js line 206
  103, `USFMGrammar: $warningString.trim()`, location	from usfm-text-check.js line 989
  102, `USFMGrammar: $warningString`, location: fileLocation	from usfm-text-check.js line 233
  101, `USFMGrammar: $warningString`, filename, location: ourLocation	from BCS-usfm-grammar-check.js line 186
  94, "Unexpected trailing space(s) before break", characterIndex, extract, location: ourLocation	from field-text-check.js line 193
  93, "Unexpected trailing space(s) before line break", characterIndex, extract, location: ourLocation	from field-text-check.js line 198
  87, C, V, "Expected \\toc2 line to follow \\toc1", lineNumber: n, characterIndex: 1, details: `not '\\$lastMarker'`, location: ourLocation	from usfm-text-check.js line 942
  87, C, V, "Expected \\toc3 line to follow \\toc2", lineNumber: n, characterIndex: 1, details: `not '\\$lastMarker'`, location: ourLocation	from usfm-text-check.js line 944
  67, C: chapterNumberString, V: `$v`, "Verse appears to be left out", location: CVlocation	from usfm-text-check.js line 453
  64, "Unexpected leading space(s) after break", characterIndex, extract, location: ourLocation	from field-text-check.js line 147
  63, "Unexpected leading space(s) after line break", characterIndex, extract, location: ourLocation	from field-text-check.js line 152
  50, "Is this quote/occurrence correct???", details: `Occurrence=$occurrence`, extract: fieldText, location: ourLocation	from orig-quote-check.js line 298
  20, "Note that 'disableAllLinkFetchingFlag' was set so link targets were not checked", location: ourLocation	from tn-table-text-check.js line 260
  20, "Note that 'disableAllLinkFetchingFlag' was set so link targets were not checked", location: ourLocation	from annotation-table-check.js line 241
